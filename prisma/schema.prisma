generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  avatar      String?
  diceLogs    DiceLog[]
  discordId   String       @unique
  sessionId   String?
  memberships Membership[]
}

model World {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members Membership[]
}

model Membership {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  world   World  @relation(fields: [worldId], references: [id], onDelete: Cascade)
  worldId String

  user          User   @relation(fields: [userDiscordId], references: [discordId], onDelete: Cascade)
  userDiscordId String

  role Role

  @@unique([worldId, userDiscordId])
}

enum Role {
  GM
  PLAYER
}

model DiceLog {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  roomId         String
  dice           Json[]  @db.JsonB // [{"sides": 6, "result": 3}, ...]
  intent         String  @default("")
  isDisadvantage Boolean @default(false)
}
